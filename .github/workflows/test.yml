
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        id: files-cache
        with:
         path: |
           node_modules
           dist/
           ~/.meteor
           tests/.__tmp_int
         key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Install/Retrieve Meteor
        run: |
              var="$(~/.meteor/meteor --version)"
              if [[ $var =~ "Meteor 2.6" ]]; then
                echo "Up-to-date"
              else
                curl https://install.meteor.com/?release=2.6 | /bin/sh
              fi
      - name: Install dependencies
        if: steps.files-cache.outputs.cache-hit != 'true'
      - name: Install NPM Dependencies
        if: steps.files-cache.outputs.cache-hit != 'true'
        run: ~/.meteor/meteor npm ci
      - name: Run Tests
        run: |
          ~/.meteor/meteor npm run test
          ~/.meteor/meteor npm run prepare-integration-tests && ~/.meteor/meteor npm run test-integration

#   test:
#     needs: build
#     name: Integration Tests
#     runs-on: ubuntu-latest
#     steps:
#       - name: Unit Tests
#         run: meteor npm run test

#   test-integration:
#     needs: build
#     name: Integration Tests
#     runs-on: ubuntu-latest
#     steps:
#       - run: meteor npm run prepare-integration-tests
#       - run: meteor npm run test-integration
